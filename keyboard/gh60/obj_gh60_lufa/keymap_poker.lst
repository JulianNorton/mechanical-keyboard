   1               		.file	"keymap_poker.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_power_up,"ax",@progbits
  11               		.weak	matrix_power_up
  13               	matrix_power_up:
  14               	.LFB4:
  15               		.file 1 "../../common/keyboard.h"
   1:../../common/keyboard.h **** /*
   2:../../common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../common/keyboard.h **** 
   4:../../common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../common/keyboard.h **** (at your option) any later version.
   8:../../common/keyboard.h **** 
   9:../../common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../common/keyboard.h **** GNU General Public License for more details.
  13:../../common/keyboard.h **** 
  14:../../common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../common/keyboard.h **** */
  17:../../common/keyboard.h **** 
  18:../../common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../common/keyboard.h **** #define KEYBOARD_H
  20:../../common/keyboard.h **** 
  21:../../common/keyboard.h **** #include <stdbool.h>
  22:../../common/keyboard.h **** #include <stdint.h>
  23:../../common/keyboard.h **** 
  24:../../common/keyboard.h **** 
  25:../../common/keyboard.h **** #ifdef __cplusplus
  26:../../common/keyboard.h **** extern "C" {
  27:../../common/keyboard.h **** #endif
  28:../../common/keyboard.h **** 
  29:../../common/keyboard.h **** /* key matrix position */
  30:../../common/keyboard.h **** typedef struct {
  31:../../common/keyboard.h ****     uint8_t col;
  32:../../common/keyboard.h ****     uint8_t row;
  33:../../common/keyboard.h **** } keypos_t;
  34:../../common/keyboard.h **** 
  35:../../common/keyboard.h **** /* key event */
  36:../../common/keyboard.h **** typedef struct {
  37:../../common/keyboard.h ****     keypos_t key;
  38:../../common/keyboard.h ****     bool     pressed;
  39:../../common/keyboard.h ****     uint16_t time;
  40:../../common/keyboard.h **** } keyevent_t;
  41:../../common/keyboard.h **** 
  42:../../common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../common/keyboard.h **** 
  45:../../common/keyboard.h **** /* Rules for No Event:
  46:../../common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../common/keyboard.h ****  */
  49:../../common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  50:../../common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
  52:../../common/keyboard.h **** 
  53:../../common/keyboard.h **** /* Tick event */
  54:../../common/keyboard.h **** #define TICK                    (keyevent_t){           \
  55:../../common/keyboard.h ****     .key = (keypos_t){ .row = 255, .col = 255 },           \
  56:../../common/keyboard.h ****     .pressed = false,                                   \
  57:../../common/keyboard.h ****     .time = (timer_read() | 1)                          \
  58:../../common/keyboard.h **** }
  59:../../common/keyboard.h **** 
  60:../../common/keyboard.h **** 
  61:../../common/keyboard.h **** void keyboard_init(void);
  62:../../common/keyboard.h **** void keyboard_task(void);
  63:../../common/keyboard.h **** void keyboard_set_leds(uint8_t leds);
  64:../../common/keyboard.h **** 
  65:../../common/keyboard.h **** __attribute__ ((weak)) void matrix_power_up(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE4:
  26               		.section	.text.matrix_power_down,"ax",@progbits
  27               		.weak	matrix_power_down
  29               	matrix_power_down:
  30               	.LFB5:
  66:../../common/keyboard.h **** __attribute__ ((weak)) void matrix_power_down(void) {}
  31               		.loc 1 66 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE5:
  41               	.global	fn_actions
  42               		.section	.progmem.data,"a",@progbits
  45               	fn_actions:
  46 0000 F1A1      		.word	-24079
  47               	.global	keymaps
  50               	keymaps:
  51 0002 29        		.byte	41
  52 0003 1E        		.byte	30
  53 0004 1F        		.byte	31
  54 0005 20        		.byte	32
  55 0006 21        		.byte	33
  56 0007 22        		.byte	34
  57 0008 23        		.byte	35
  58 0009 24        		.byte	36
  59 000a 25        		.byte	37
  60 000b 26        		.byte	38
  61 000c 27        		.byte	39
  62 000d 2D        		.byte	45
  63 000e 2E        		.byte	46
  64 000f 2A        		.byte	42
  65 0010 A9        		.byte	-87
  66 0011 2B        		.byte	43
  67 0012 14        		.byte	20
  68 0013 1A        		.byte	26
  69 0014 08        		.byte	8
  70 0015 15        		.byte	21
  71 0016 17        		.byte	23
  72 0017 1C        		.byte	28
  73 0018 18        		.byte	24
  74 0019 0C        		.byte	12
  75 001a 12        		.byte	18
  76 001b 13        		.byte	19
  77 001c 2F        		.byte	47
  78 001d 30        		.byte	48
  79 001e 31        		.byte	49
  80 001f AA        		.byte	-86
  81 0020 C0        		.byte	-64
  82 0021 04        		.byte	4
  83 0022 16        		.byte	22
  84 0023 07        		.byte	7
  85 0024 09        		.byte	9
  86 0025 0A        		.byte	10
  87 0026 0B        		.byte	11
  88 0027 0D        		.byte	13
  89 0028 0E        		.byte	14
  90 0029 0F        		.byte	15
  91 002a 33        		.byte	51
  92 002b 34        		.byte	52
  93 002c 00        		.byte	0
  94 002d 28        		.byte	40
  95 002e 4B        		.byte	75
  96 002f E1        		.byte	-31
  97 0030 00        		.byte	0
  98 0031 1D        		.byte	29
  99 0032 1B        		.byte	27
 100 0033 06        		.byte	6
 101 0034 19        		.byte	25
 102 0035 05        		.byte	5
 103 0036 11        		.byte	17
 104 0037 10        		.byte	16
 105 0038 36        		.byte	54
 106 0039 37        		.byte	55
 107 003a 38        		.byte	56
 108 003b E5        		.byte	-27
 109 003c 52        		.byte	82
 110 003d 4E        		.byte	78
 111 003e E0        		.byte	-32
 112 003f E2        		.byte	-30
 113 0040 E3        		.byte	-29
 114 0041 00        		.byte	0
 115 0042 00        		.byte	0
 116 0043 00        		.byte	0
 117 0044 2C        		.byte	44
 118 0045 00        		.byte	0
 119 0046 00        		.byte	0
 120 0047 E7        		.byte	-25
 121 0048 E6        		.byte	-26
 122 0049 E4        		.byte	-28
 123 004a 50        		.byte	80
 124 004b 51        		.byte	81
 125 004c 4F        		.byte	79
 126               		.comm	keymap_config,1,1
 127               		.text
 128               	.Letext0:
 129               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 130               		.file 3 "../../common/keycode.h"
 131               		.file 4 "../../common/action_code.h"
 132               		.file 5 "../../common/keymap.h"
 133               		.file 6 "../../protocol/lufa/LUFA-120730/LUFA/Drivers/USB/Core/USBTask.h"
 134               		.file 7 "keymap_poker.c"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_poker.c
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:2      *ABS*:0000003e __SP_H__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:3      *ABS*:0000003d __SP_L__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:4      *ABS*:0000003f __SREG__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:6      *ABS*:00000001 __zero_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:13     .text.matrix_power_up:00000000 matrix_power_up
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:29     .text.matrix_power_down:00000000 matrix_power_down
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:45     .progmem.data:00000000 fn_actions
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccQjkHO6.s:50     .progmem.data:00000002 keymaps
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
__do_clear_bss

   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../tmk_core/common/keyboard.c **** #endif
  36:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../tmk_core/common/keyboard.c **** #endif
  39:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../tmk_core/common/keyboard.c **** #endif
  42:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../tmk_core/common/keyboard.c **** #endif
  45:../../tmk_core/common/keyboard.c **** 
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../tmk_core/common/keyboard.c **** {
  50:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../tmk_core/common/keyboard.c ****         return false;
  54:../../tmk_core/common/keyboard.c **** 
  55:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../tmk_core/common/keyboard.c ****             return true;
  59:../../tmk_core/common/keyboard.c ****     }
  60:../../tmk_core/common/keyboard.c ****     return false;
  61:../../tmk_core/common/keyboard.c **** }
  62:../../tmk_core/common/keyboard.c **** #endif
  63:../../tmk_core/common/keyboard.c **** 
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 67 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 68 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 72 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 73 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 74 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 87 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_set_leds,"ax",@progbits
  67               	.global	keyboard_set_leds
  69               	keyboard_set_leds:
  70               	.LFB107:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     });
 136:../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../tmk_core/common/keyboard.c ****                 }
 141:../../tmk_core/common/keyboard.c ****             }
 142:../../tmk_core/common/keyboard.c ****         }
 143:../../tmk_core/common/keyboard.c ****     }
 144:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../tmk_core/common/keyboard.c **** 
 147:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../tmk_core/common/keyboard.c **** #endif
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../tmk_core/common/keyboard.c **** #endif
 157:../../tmk_core/common/keyboard.c **** 
 158:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../tmk_core/common/keyboard.c **** #endif
 161:../../tmk_core/common/keyboard.c **** 
 162:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../tmk_core/common/keyboard.c **** #endif
 165:../../tmk_core/common/keyboard.c **** 
 166:../../tmk_core/common/keyboard.c ****     // update LED
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../tmk_core/common/keyboard.c ****     }
 171:../../tmk_core/common/keyboard.c **** }
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../tmk_core/common/keyboard.c **** {
  71               		.loc 1 174 0
  72               		.cfi_startproc
  73               	.LVL4:
  74 0000 CF93      		push r28
  75               	.LCFI0:
  76               		.cfi_def_cfa_offset 3
  77               		.cfi_offset 28, -2
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 1 */
  81               	.L__stack_usage = 1
  82 0002 C82F      		mov r28,r24
 175:../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  83               		.loc 1 175 0
  84 0004 8091 0000 		lds r24,debug_config
  85               	.LVL5:
  86 0008 82FF      		sbrs r24,2
  87 000a 00C0      		rjmp .L6
  88               		.loc 1 175 0 is_stmt 0 discriminator 1
  89 000c 80FF      		sbrs r24,0
  90 000e 00C0      		rjmp .L7
  91 0010 80E0      		ldi r24,lo8(__c.4728)
  92 0012 90E0      		ldi r25,hi8(__c.4728)
  93 0014 0E94 0000 		call xputs
  94               	.LVL6:
  95               	.L7:
  96               		.loc 1 175 0 discriminator 2
  97 0018 8091 0000 		lds r24,debug_config
  98 001c 80FF      		sbrs r24,0
  99 001e 00C0      		rjmp .L8
 100               		.loc 1 175 0 discriminator 1
 101 0020 1F92      		push __zero_reg__
 102               	.LCFI1:
 103               		.cfi_def_cfa_offset 4
 104 0022 CF93      		push r28
 105               	.LCFI2:
 106               		.cfi_def_cfa_offset 5
 107 0024 20E0      		ldi r18,lo8(__c.4730)
 108 0026 30E0      		ldi r19,hi8(__c.4730)
 109 0028 3F93      		push r19
 110               	.LCFI3:
 111               		.cfi_def_cfa_offset 6
 112 002a 2F93      		push r18
 113               	.LCFI4:
 114               		.cfi_def_cfa_offset 7
 115 002c 0E94 0000 		call __xprintf
 116               	.LVL7:
 117 0030 0F90      		pop __tmp_reg__
 118 0032 0F90      		pop __tmp_reg__
 119 0034 0F90      		pop __tmp_reg__
 120 0036 0F90      		pop __tmp_reg__
 121               	.LCFI5:
 122               		.cfi_def_cfa_offset 3
 123               	.L8:
 124               		.loc 1 175 0 discriminator 2
 125 0038 8091 0000 		lds r24,debug_config
 126 003c 80FF      		sbrs r24,0
 127 003e 00C0      		rjmp .L6
 128               		.loc 1 175 0 discriminator 1
 129 0040 80E0      		ldi r24,lo8(__c.4732)
 130 0042 90E0      		ldi r25,hi8(__c.4732)
 131 0044 0E94 0000 		call xputs
 132               	.LVL8:
 133               	.L6:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 134               		.loc 1 176 0 is_stmt 1
 135 0048 8C2F      		mov r24,r28
 136               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c **** }
 137               		.loc 1 177 0
 138 004a CF91      		pop r28
 139               	.LVL9:
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
 140               		.loc 1 176 0
 141 004c 0C94 0000 		jmp led_set
 142               	.LVL10:
 143               		.cfi_endproc
 144               	.LFE107:
 146               		.section	.text.keyboard_task,"ax",@progbits
 147               	.global	keyboard_task
 149               	keyboard_task:
 150               	.LFB106:
 100:../../tmk_core/common/keyboard.c **** {
 151               		.loc 1 100 0
 152               		.cfi_startproc
 153 0000 5F92      		push r5
 154               	.LCFI6:
 155               		.cfi_def_cfa_offset 3
 156               		.cfi_offset 5, -2
 157 0002 6F92      		push r6
 158               	.LCFI7:
 159               		.cfi_def_cfa_offset 4
 160               		.cfi_offset 6, -3
 161 0004 7F92      		push r7
 162               	.LCFI8:
 163               		.cfi_def_cfa_offset 5
 164               		.cfi_offset 7, -4
 165 0006 8F92      		push r8
 166               	.LCFI9:
 167               		.cfi_def_cfa_offset 6
 168               		.cfi_offset 8, -5
 169 0008 9F92      		push r9
 170               	.LCFI10:
 171               		.cfi_def_cfa_offset 7
 172               		.cfi_offset 9, -6
 173 000a AF92      		push r10
 174               	.LCFI11:
 175               		.cfi_def_cfa_offset 8
 176               		.cfi_offset 10, -7
 177 000c BF92      		push r11
 178               	.LCFI12:
 179               		.cfi_def_cfa_offset 9
 180               		.cfi_offset 11, -8
 181 000e CF92      		push r12
 182               	.LCFI13:
 183               		.cfi_def_cfa_offset 10
 184               		.cfi_offset 12, -9
 185 0010 DF92      		push r13
 186               	.LCFI14:
 187               		.cfi_def_cfa_offset 11
 188               		.cfi_offset 13, -10
 189 0012 EF92      		push r14
 190               	.LCFI15:
 191               		.cfi_def_cfa_offset 12
 192               		.cfi_offset 14, -11
 193 0014 FF92      		push r15
 194               	.LCFI16:
 195               		.cfi_def_cfa_offset 13
 196               		.cfi_offset 15, -12
 197 0016 0F93      		push r16
 198               	.LCFI17:
 199               		.cfi_def_cfa_offset 14
 200               		.cfi_offset 16, -13
 201 0018 1F93      		push r17
 202               	.LCFI18:
 203               		.cfi_def_cfa_offset 15
 204               		.cfi_offset 17, -14
 205 001a CF93      		push r28
 206               	.LCFI19:
 207               		.cfi_def_cfa_offset 16
 208               		.cfi_offset 28, -15
 209 001c DF93      		push r29
 210               	.LCFI20:
 211               		.cfi_def_cfa_offset 17
 212               		.cfi_offset 29, -16
 213 001e CDB7      		in r28,__SP_L__
 214 0020 DEB7      		in r29,__SP_H__
 215               	.LCFI21:
 216               		.cfi_def_cfa_register 28
 217 0022 2A97      		sbiw r28,10
 218               	.LCFI22:
 219               		.cfi_def_cfa_offset 27
 220 0024 0FB6      		in __tmp_reg__,__SREG__
 221 0026 F894      		cli
 222 0028 DEBF      		out __SP_H__,r29
 223 002a 0FBE      		out __SREG__,__tmp_reg__
 224 002c CDBF      		out __SP_L__,r28
 225               	/* prologue: function */
 226               	/* frame size = 10 */
 227               	/* stack size = 25 */
 228               	.L__stack_usage = 25
 229               	.LVL11:
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 230               		.loc 1 109 0
 231 002e 0E94 0000 		call matrix_scan
 232               	.LVL12:
 233 0032 90E0      		ldi r25,lo8(matrix_prev.4708)
 234 0034 C92E      		mov r12,r25
 235 0036 90E0      		ldi r25,hi8(matrix_prev.4708)
 236 0038 D92E      		mov r13,r25
 237 003a 00E0      		ldi r16,0
 238 003c 10E0      		ldi r17,0
 239               	.LBB2:
 240               	.LBB3:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 241               		.loc 1 130 0
 242 003e AA24      		clr r10
 243 0040 A394      		inc r10
 244 0042 B12C      		mov r11,__zero_reg__
 245               	.LVL13:
 246               	.L30:
 247 0044 502E      		mov r5,r16
 248               	.LVL14:
 249               	.LBE3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 250               		.loc 1 111 0
 251 0046 802F      		mov r24,r16
 252 0048 0E94 0000 		call matrix_get_row
 253               	.LVL15:
 254 004c 3C01      		movw r6,r24
 255               	.LVL16:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 256               		.loc 1 112 0
 257 004e F601      		movw r30,r12
 258 0050 E190      		ld r14,Z+
 259 0052 F190      		ld r15,Z+
 260 0054 6F01      		movw r12,r30
 261 0056 E826      		eor r14,r24
 262 0058 F926      		eor r15,r25
 263               	.LVL17:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 264               		.loc 1 113 0
 265 005a E114      		cp r14,__zero_reg__
 266 005c F104      		cpc r15,__zero_reg__
 267 005e 01F4      		brne .L21
 268               	.L28:
 269               	.LVL18:
 270 0060 0F5F      		subi r16,-1
 271 0062 1F4F      		sbci r17,-1
 272               	.LVL19:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 273               		.loc 1 110 0
 274 0064 0530      		cpi r16,5
 275 0066 1105      		cpc r17,__zero_reg__
 276 0068 01F4      		brne .L30
 277               	.LBE2:
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 278               		.loc 1 145 0
 279 006a 8FEF      		ldi r24,lo8(-1)
 280 006c 8983      		std Y+1,r24
 281 006e 8A83      		std Y+2,r24
 282 0070 1B82      		std Y+3,__zero_reg__
 283 0072 0E94 0000 		call timer_read
 284               	.LVL20:
 285 0076 8160      		ori r24,1
 286 0078 782F      		mov r23,r24
 287 007a 9D83      		std Y+5,r25
 288 007c 8C83      		std Y+4,r24
 289 007e 4981      		ldd r20,Y+1
 290 0080 5A81      		ldd r21,Y+2
 291 0082 6B81      		ldd r22,Y+3
 292 0084 8D81      		ldd r24,Y+5
 293 0086 0E94 0000 		call action_exec
 294               	.LVL21:
 295 008a 00C0      		rjmp .L27
 296               	.L21:
 297               	.LBB5:
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 298               		.loc 1 128 0
 299 008c 8091 0000 		lds r24,debug_config
 300 0090 81FD      		sbrc r24,1
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 301               		.loc 1 128 0 is_stmt 0 discriminator 1
 302 0092 0E94 0000 		call matrix_print
 303               	.LVL22:
 304               	.L24:
 305               	.LBE5:
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 306               		.loc 1 109 0 is_stmt 1
 307 0096 20E0      		ldi r18,0
 308 0098 30E0      		ldi r19,0
 309               	.LVL23:
 310               	.L29:
 311               	.LBB6:
 312               	.LBB4:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 313               		.loc 1 130 0
 314 009a 4501      		movw r8,r10
 315 009c 022E      		mov r0,r18
 316 009e 00C0      		rjmp 2f
 317               		1:
 318 00a0 880C      		lsl r8
 319 00a2 991C      		rol r9
 320               		2:
 321 00a4 0A94      		dec r0
 322 00a6 02F4      		brpl 1b
 323 00a8 C401      		movw r24,r8
 324 00aa 8E21      		and r24,r14
 325 00ac 9F21      		and r25,r15
 326 00ae 892B      		or r24,r25
 327 00b0 01F0      		breq .L25
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 328               		.loc 1 131 0
 329 00b2 2E83      		std Y+6,r18
 330 00b4 5F82      		std Y+7,r5
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 331               		.loc 1 133 0
 332 00b6 6820      		and r6,r8
 333 00b8 7920      		and r7,r9
 334               	.LVL24:
 335 00ba 81E0      		ldi r24,lo8(1)
 336 00bc 6728      		or r6,r7
 337 00be 01F4      		brne .L26
 338 00c0 80E0      		ldi r24,0
 339               	.L26:
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 340               		.loc 1 131 0
 341 00c2 8887      		std Y+8,r24
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 342               		.loc 1 134 0
 343 00c4 0E94 0000 		call timer_read
 344               	.LVL25:
 345 00c8 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 346               		.loc 1 131 0
 347 00ca 782F      		mov r23,r24
 348 00cc 9A87      		std Y+10,r25
 349 00ce 8987      		std Y+9,r24
 350 00d0 4E81      		ldd r20,Y+6
 351 00d2 5F81      		ldd r21,Y+7
 352 00d4 6885      		ldd r22,Y+8
 353 00d6 8A85      		ldd r24,Y+10
 354 00d8 0E94 0000 		call action_exec
 355               	.LVL26:
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 356               		.loc 1 137 0
 357 00dc F801      		movw r30,r16
 358 00de EE0F      		lsl r30
 359 00e0 FF1F      		rol r31
 360 00e2 E050      		subi r30,lo8(-(matrix_prev.4708))
 361 00e4 F040      		sbci r31,hi8(-(matrix_prev.4708))
 362 00e6 8081      		ld r24,Z
 363 00e8 9181      		ldd r25,Z+1
 364 00ea 8825      		eor r24,r8
 365 00ec 9925      		eor r25,r9
 366 00ee 9183      		std Z+1,r25
 367 00f0 8083      		st Z,r24
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 368               		.loc 1 139 0
 369 00f2 00C0      		rjmp .L27
 370               	.LVL27:
 371               	.L25:
 372 00f4 2F5F      		subi r18,-1
 373 00f6 3F4F      		sbci r19,-1
 374               	.LVL28:
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 375               		.loc 1 129 0
 376 00f8 2E30      		cpi r18,14
 377 00fa 3105      		cpc r19,__zero_reg__
 378 00fc 01F4      		brne .L29
 379 00fe 00C0      		rjmp .L28
 380               	.LVL29:
 381               	.L27:
 382               	.LBE4:
 383               	.LBE6:
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 384               		.loc 1 151 0
 385 0100 0E94 0000 		call mousekey_task
 386               	.LVL30:
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 387               		.loc 1 167 0
 388 0104 1091 0000 		lds r17,led_status.4709
 389 0108 0E94 0000 		call host_keyboard_leds
 390               	.LVL31:
 391 010c 1817      		cp r17,r24
 392 010e 01F0      		breq .L20
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 393               		.loc 1 168 0
 394 0110 0E94 0000 		call host_keyboard_leds
 395               	.LVL32:
 396 0114 8093 0000 		sts led_status.4709,r24
 397               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** }
 398               		.loc 1 171 0
 399 0118 2A96      		adiw r28,10
 400 011a 0FB6      		in __tmp_reg__,__SREG__
 401 011c F894      		cli
 402 011e DEBF      		out __SP_H__,r29
 403 0120 0FBE      		out __SREG__,__tmp_reg__
 404 0122 CDBF      		out __SP_L__,r28
 405 0124 DF91      		pop r29
 406 0126 CF91      		pop r28
 407 0128 1F91      		pop r17
 408 012a 0F91      		pop r16
 409 012c FF90      		pop r15
 410 012e EF90      		pop r14
 411               	.LVL33:
 412 0130 DF90      		pop r13
 413 0132 CF90      		pop r12
 414 0134 BF90      		pop r11
 415 0136 AF90      		pop r10
 416 0138 9F90      		pop r9
 417 013a 8F90      		pop r8
 418 013c 7F90      		pop r7
 419 013e 6F90      		pop r6
 420 0140 5F90      		pop r5
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 421               		.loc 1 169 0
 422 0142 0C94 0000 		jmp keyboard_set_leds
 423               	.LVL34:
 424               	.L20:
 425               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** }
 426               		.loc 1 171 0
 427 0146 2A96      		adiw r28,10
 428 0148 0FB6      		in __tmp_reg__,__SREG__
 429 014a F894      		cli
 430 014c DEBF      		out __SP_H__,r29
 431 014e 0FBE      		out __SREG__,__tmp_reg__
 432 0150 CDBF      		out __SP_L__,r28
 433 0152 DF91      		pop r29
 434 0154 CF91      		pop r28
 435 0156 1F91      		pop r17
 436 0158 0F91      		pop r16
 437 015a FF90      		pop r15
 438 015c EF90      		pop r14
 439               	.LVL35:
 440 015e DF90      		pop r13
 441 0160 CF90      		pop r12
 442 0162 BF90      		pop r11
 443 0164 AF90      		pop r10
 444 0166 9F90      		pop r9
 445 0168 8F90      		pop r8
 446 016a 7F90      		pop r7
 447 016c 6F90      		pop r6
 448 016e 5F90      		pop r5
 449 0170 0895      		ret
 450               		.cfi_endproc
 451               	.LFE106:
 453               		.section	.progmem.data.__c.4732,"a",@progbits
 456               	__c.4732:
 457 0000 0A00      		.string	"\n"
 458               		.section	.progmem.data.__c.4730,"a",@progbits
 461               	__c.4730:
 462 0000 2530 3258 		.string	"%02X"
 462      00
 463               		.section	.progmem.data.__c.4728,"a",@progbits
 466               	__c.4728:
 467 0000 6B65 7962 		.string	"keyboard_set_led: "
 467      6F61 7264 
 467      5F73 6574 
 467      5F6C 6564 
 467      3A20 00
 468               		.section	.bss.led_status.4709,"aw",@nobits
 471               	led_status.4709:
 472 0000 00        		.zero	1
 473               		.section	.bss.matrix_prev.4708,"aw",@nobits
 476               	matrix_prev.4708:
 477 0000 0000 0000 		.zero	10
 477      0000 0000 
 477      0000 
 478               		.comm	keymap_config,1,1
 479               		.text
 480               	.Letext0:
 481               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 482               		.file 3 "../../tmk_core/common/keyboard.h"
 483               		.file 4 "../../tmk_core/common/matrix.h"
 484               		.file 5 "../../tmk_core/common/keymap.h"
 485               		.file 6 "../../tmk_core/common/debug.h"
 486               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 487               		.file 8 "../../tmk_core/common/timer.h"
 488               		.file 9 "../../tmk_core/common/bootmagic.h"
 489               		.file 10 "../../tmk_core/common/avr/xprintf.h"
 490               		.file 11 "../../tmk_core/common/led.h"
 491               		.file 12 "../../tmk_core/common/action.h"
 492               		.file 13 "../../tmk_core/common/mousekey.h"
 493               		.file 14 "../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:2      *ABS*:0000003e __SP_H__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:3      *ABS*:0000003d __SP_L__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:4      *ABS*:0000003f __SREG__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:6      *ABS*:00000001 __zero_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:13     .text.matrix_setup:00000000 matrix_setup
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:29     .text.keyboard_setup:00000000 keyboard_setup
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:46     .text.keyboard_init:00000000 keyboard_init
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:69     .text.keyboard_set_leds:00000000 keyboard_set_leds
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:466    .progmem.data.__c.4728:00000000 __c.4728
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:461    .progmem.data.__c.4730:00000000 __c.4730
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:456    .progmem.data.__c.4732:00000000 __c.4732
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:149    .text.keyboard_task:00000000 keyboard_task
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:476    .bss.matrix_prev.4708:00000000 matrix_prev.4708
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMv6isa.s:471    .bss.led_status.4709:00000000 led_status.4709
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
timer_read
action_exec
matrix_print
mousekey_task
host_keyboard_leds
__do_clear_bss

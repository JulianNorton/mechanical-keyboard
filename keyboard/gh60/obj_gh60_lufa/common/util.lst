   1               		.file	"util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.bitpop,"ax",@progbits
  11               	.global	bitpop
  13               	bitpop:
  14               	.LFB0:
  15               		.file 1 "../../common/util.c"
   1:../../common/util.c **** /*
   2:../../common/util.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../common/util.c **** 
   4:../../common/util.c **** This program is free software: you can redistribute it and/or modify
   5:../../common/util.c **** it under the terms of the GNU General Public License as published by
   6:../../common/util.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../common/util.c **** (at your option) any later version.
   8:../../common/util.c **** 
   9:../../common/util.c **** This program is distributed in the hope that it will be useful,
  10:../../common/util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../common/util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../common/util.c **** GNU General Public License for more details.
  13:../../common/util.c **** 
  14:../../common/util.c **** You should have received a copy of the GNU General Public License
  15:../../common/util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../common/util.c **** */
  17:../../common/util.c **** 
  18:../../common/util.c **** #include "util.h"
  19:../../common/util.c **** 
  20:../../common/util.c **** // bit population - return number of on-bit
  21:../../common/util.c **** uint8_t bitpop(uint8_t bits)
  22:../../common/util.c **** {
  16               		.loc 1 22 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23:../../common/util.c ****     uint8_t c;
  24:../../common/util.c ****     for (c = 0; bits; c++)
  23               		.loc 1 24 0
  24 0000 90E0      		ldi r25,0
  25               	.LVL1:
  26               	.L2:
  27               		.loc 1 24 0 is_stmt 0 discriminator 1
  28 0002 8823      		tst r24
  29 0004 01F0      		breq .L5
  25:../../common/util.c ****         bits &= bits - 1;
  30               		.loc 1 25 0 is_stmt 1 discriminator 2
  31 0006 2FEF      		ldi r18,lo8(-1)
  32 0008 280F      		add r18,r24
  33 000a 8223      		and r24,r18
  34               	.LVL2:
  24:../../common/util.c ****     for (c = 0; bits; c++)
  35               		.loc 1 24 0 discriminator 2
  36 000c 9F5F      		subi r25,lo8(-(1))
  37               	.LVL3:
  38 000e 00C0      		rjmp .L2
  39               	.L5:
  26:../../common/util.c ****     return c;
  27:../../common/util.c **** /*
  28:../../common/util.c ****     const uint8_t bit_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 };
  29:../../common/util.c ****     return bit_count[bits>>4] + bit_count[bits&0x0F]
  30:../../common/util.c **** */
  31:../../common/util.c **** }
  40               		.loc 1 31 0
  41 0010 892F      		mov r24,r25
  42               	.LVL4:
  43 0012 0895      		ret
  44               		.cfi_endproc
  45               	.LFE0:
  47               		.section	.text.bitpop16,"ax",@progbits
  48               	.global	bitpop16
  50               	bitpop16:
  51               	.LFB1:
  32:../../common/util.c **** 
  33:../../common/util.c **** uint8_t bitpop16(uint16_t bits)
  34:../../common/util.c **** {
  52               		.loc 1 34 0
  53               		.cfi_startproc
  54               	.LVL5:
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 0 */
  58               	.L__stack_usage = 0
  35:../../common/util.c ****     uint8_t c;
  36:../../common/util.c ****     for (c = 0; bits; c++)
  59               		.loc 1 36 0
  60 0000 40E0      		ldi r20,0
  61               	.LVL6:
  62               	.L7:
  63               		.loc 1 36 0 is_stmt 0 discriminator 1
  64 0002 0097      		sbiw r24,0
  65 0004 01F0      		breq .L9
  37:../../common/util.c ****         bits &= bits - 1;
  66               		.loc 1 37 0 is_stmt 1 discriminator 2
  67 0006 9C01      		movw r18,r24
  68 0008 2150      		subi r18,1
  69 000a 3109      		sbc r19,__zero_reg__
  70 000c 8223      		and r24,r18
  71 000e 9323      		and r25,r19
  72               	.LVL7:
  36:../../common/util.c ****     for (c = 0; bits; c++)
  73               		.loc 1 36 0 discriminator 2
  74 0010 4F5F      		subi r20,lo8(-(1))
  75               	.LVL8:
  76 0012 00C0      		rjmp .L7
  77               	.L9:
  38:../../common/util.c ****     return c;
  39:../../common/util.c **** }
  78               		.loc 1 39 0
  79 0014 842F      		mov r24,r20
  80               	.LVL9:
  81 0016 0895      		ret
  82               		.cfi_endproc
  83               	.LFE1:
  85               		.section	.text.bitpop32,"ax",@progbits
  86               	.global	bitpop32
  88               	bitpop32:
  89               	.LFB2:
  40:../../common/util.c **** 
  41:../../common/util.c **** uint8_t bitpop32(uint32_t bits)
  42:../../common/util.c **** {
  90               		.loc 1 42 0
  91               		.cfi_startproc
  92               	.LVL10:
  93 0000 0F93      		push r16
  94               	.LCFI0:
  95               		.cfi_def_cfa_offset 3
  96               		.cfi_offset 16, -2
  97 0002 1F93      		push r17
  98               	.LCFI1:
  99               		.cfi_def_cfa_offset 4
 100               		.cfi_offset 17, -3
 101               	/* prologue: function */
 102               	/* frame size = 0 */
 103               	/* stack size = 2 */
 104               	.L__stack_usage = 2
 105               	.LVL11:
  43:../../common/util.c ****     uint8_t c;
  44:../../common/util.c ****     for (c = 0; bits; c++)
 106               		.loc 1 44 0
 107 0004 40E0      		ldi r20,0
 108               	.LVL12:
 109               	.L11:
 110               		.loc 1 44 0 is_stmt 0 discriminator 1
 111 0006 6115      		cp r22,__zero_reg__
 112 0008 7105      		cpc r23,__zero_reg__
 113 000a 8105      		cpc r24,__zero_reg__
 114 000c 9105      		cpc r25,__zero_reg__
 115 000e 01F0      		breq .L13
  45:../../common/util.c ****         bits &= bits - 1;
 116               		.loc 1 45 0 is_stmt 1 discriminator 2
 117 0010 8B01      		movw r16,r22
 118 0012 9C01      		movw r18,r24
 119 0014 0150      		subi r16,1
 120 0016 1109      		sbc r17,__zero_reg__
 121 0018 2109      		sbc r18,__zero_reg__
 122 001a 3109      		sbc r19,__zero_reg__
 123 001c 6023      		and r22,r16
 124 001e 7123      		and r23,r17
 125 0020 8223      		and r24,r18
 126 0022 9323      		and r25,r19
 127               	.LVL13:
  44:../../common/util.c ****     for (c = 0; bits; c++)
 128               		.loc 1 44 0 discriminator 2
 129 0024 4F5F      		subi r20,lo8(-(1))
 130               	.LVL14:
 131 0026 00C0      		rjmp .L11
 132               	.L13:
  46:../../common/util.c ****     return c;
  47:../../common/util.c **** }
 133               		.loc 1 47 0
 134 0028 842F      		mov r24,r20
 135               	/* epilogue start */
 136 002a 1F91      		pop r17
 137 002c 0F91      		pop r16
 138 002e 0895      		ret
 139               		.cfi_endproc
 140               	.LFE2:
 142               		.section	.text.biton,"ax",@progbits
 143               	.global	biton
 145               	biton:
 146               	.LFB3:
  48:../../common/util.c **** 
  49:../../common/util.c **** // most significant on-bit - return highest location of on-bit
  50:../../common/util.c **** // NOTE: return 0 when bit0 is on or all bits are off
  51:../../common/util.c **** uint8_t biton(uint8_t bits)
  52:../../common/util.c **** {
 147               		.loc 1 52 0
 148               		.cfi_startproc
 149               	.LVL15:
 150               	/* prologue: function */
 151               	/* frame size = 0 */
 152               	/* stack size = 0 */
 153               	.L__stack_usage = 0
  53:../../common/util.c ****     uint8_t n = 0;
  54:../../common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 154               		.loc 1 54 0
 155 0000 982F      		mov r25,r24
 156 0002 9295      		swap r25
 157 0004 9F70      		andi r25,lo8(15)
 158 0006 01F4      		brne .L18
 159 0008 982F      		mov r25,r24
  53:../../common/util.c ****     uint8_t n = 0;
 160               		.loc 1 53 0
 161 000a 80E0      		ldi r24,0
 162               	.LVL16:
 163 000c 00C0      		rjmp .L15
 164               	.LVL17:
 165               	.L18:
 166               		.loc 1 54 0
 167 000e 84E0      		ldi r24,lo8(4)
 168               	.LVL18:
 169               	.L15:
  55:../../common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 170               		.loc 1 55 0
 171 0010 292F      		mov r18,r25
 172 0012 2695      		lsr r18
 173 0014 2695      		lsr r18
 174 0016 01F0      		breq .L16
 175               	.LVL19:
 176               		.loc 1 55 0 is_stmt 0 discriminator 1
 177 0018 8E5F      		subi r24,lo8(-(2))
 178               	.LVL20:
 179 001a 922F      		mov r25,r18
 180               	.LVL21:
 181               	.L16:
  56:../../common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 182               		.loc 1 56 0 is_stmt 1
 183 001c 9695      		lsr r25
 184 001e 01F0      		breq .L17
 185               		.loc 1 56 0 is_stmt 0 discriminator 1
 186 0020 8F5F      		subi r24,lo8(-(1))
 187               	.LVL22:
 188               	.L17:
  57:../../common/util.c ****     return n;
  58:../../common/util.c **** }
 189               		.loc 1 58 0 is_stmt 1
 190 0022 0895      		ret
 191               		.cfi_endproc
 192               	.LFE3:
 194               		.section	.text.biton16,"ax",@progbits
 195               	.global	biton16
 197               	biton16:
 198               	.LFB4:
  59:../../common/util.c **** 
  60:../../common/util.c **** uint8_t biton16(uint16_t bits)
  61:../../common/util.c **** {
 199               		.loc 1 61 0
 200               		.cfi_startproc
 201               	.LVL23:
 202               	/* prologue: function */
 203               	/* frame size = 0 */
 204               	/* stack size = 0 */
 205               	.L__stack_usage = 0
  62:../../common/util.c ****     uint8_t n = 0;
  63:../../common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 206               		.loc 1 63 0
 207 0000 292F      		mov r18,r25
 208 0002 30E0      		ldi r19,0
 209 0004 2115      		cp r18,__zero_reg__
 210 0006 3105      		cpc r19,__zero_reg__
 211 0008 01F4      		brne .L30
 212 000a 9C01      		movw r18,r24
  62:../../common/util.c ****     uint8_t n = 0;
 213               		.loc 1 62 0
 214 000c 80E0      		ldi r24,0
 215               	.LVL24:
 216 000e 00C0      		rjmp .L26
 217               	.LVL25:
 218               	.L30:
 219               		.loc 1 63 0
 220 0010 88E0      		ldi r24,lo8(8)
 221               	.LVL26:
 222               	.L26:
  64:../../common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 223               		.loc 1 64 0
 224 0012 A901      		movw r20,r18
 225 0014 74E0      		ldi r23,4
 226               		1:
 227 0016 5695      		lsr r21
 228 0018 4795      		ror r20
 229 001a 7A95      		dec r23
 230 001c 01F4      		brne 1b
 231 001e 4115      		cp r20,__zero_reg__
 232 0020 5105      		cpc r21,__zero_reg__
 233 0022 01F0      		breq .L27
 234               	.LVL27:
 235               		.loc 1 64 0 is_stmt 0 discriminator 1
 236 0024 8C5F      		subi r24,lo8(-(4))
 237               	.LVL28:
 238 0026 9A01      		movw r18,r20
 239               	.LVL29:
 240               	.L27:
  65:../../common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 241               		.loc 1 65 0 is_stmt 1
 242 0028 A901      		movw r20,r18
 243 002a 5695      		lsr r21
 244 002c 4795      		ror r20
 245 002e 5695      		lsr r21
 246 0030 4795      		ror r20
 247 0032 4115      		cp r20,__zero_reg__
 248 0034 5105      		cpc r21,__zero_reg__
 249 0036 01F0      		breq .L28
 250               	.LVL30:
 251               		.loc 1 65 0 is_stmt 0 discriminator 1
 252 0038 8E5F      		subi r24,lo8(-(2))
 253               	.LVL31:
 254 003a 9A01      		movw r18,r20
 255               	.LVL32:
 256               	.L28:
  66:../../common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 257               		.loc 1 66 0 is_stmt 1
 258 003c 3695      		lsr r19
 259 003e 2795      		ror r18
 260 0040 232B      		or r18,r19
 261 0042 01F0      		breq .L29
 262               		.loc 1 66 0 is_stmt 0 discriminator 1
 263 0044 8F5F      		subi r24,lo8(-(1))
 264               	.LVL33:
 265               	.L29:
  67:../../common/util.c ****     return n;
  68:../../common/util.c **** }
 266               		.loc 1 68 0 is_stmt 1
 267 0046 0895      		ret
 268               		.cfi_endproc
 269               	.LFE4:
 271               		.section	.text.biton32,"ax",@progbits
 272               	.global	biton32
 274               	biton32:
 275               	.LFB5:
  69:../../common/util.c **** 
  70:../../common/util.c **** uint8_t biton32(uint32_t bits)
  71:../../common/util.c **** {
 276               		.loc 1 71 0
 277               		.cfi_startproc
 278               	.LVL34:
 279 0000 CF92      		push r12
 280               	.LCFI2:
 281               		.cfi_def_cfa_offset 3
 282               		.cfi_offset 12, -2
 283 0002 DF92      		push r13
 284               	.LCFI3:
 285               		.cfi_def_cfa_offset 4
 286               		.cfi_offset 13, -3
 287 0004 EF92      		push r14
 288               	.LCFI4:
 289               		.cfi_def_cfa_offset 5
 290               		.cfi_offset 14, -4
 291 0006 FF92      		push r15
 292               	.LCFI5:
 293               		.cfi_def_cfa_offset 6
 294               		.cfi_offset 15, -5
 295 0008 0F93      		push r16
 296               	.LCFI6:
 297               		.cfi_def_cfa_offset 7
 298               		.cfi_offset 16, -6
 299 000a 1F93      		push r17
 300               	.LCFI7:
 301               		.cfi_def_cfa_offset 8
 302               		.cfi_offset 17, -7
 303               	/* prologue: function */
 304               	/* frame size = 0 */
 305               	/* stack size = 6 */
 306               	.L__stack_usage = 6
 307               	.LVL35:
  72:../../common/util.c ****     uint8_t n = 0;
  73:../../common/util.c ****     if (bits >>16) { bits >>=16; n +=16;}
 308               		.loc 1 73 0
 309 000c 6C01      		movw r12,r24
 310 000e EE24      		clr r14
 311 0010 FF24      		clr r15
 312 0012 C114      		cp r12,__zero_reg__
 313 0014 D104      		cpc r13,__zero_reg__
 314 0016 E104      		cpc r14,__zero_reg__
 315 0018 F104      		cpc r15,__zero_reg__
 316 001a 01F4      		brne .L46
 317 001c 6B01      		movw r12,r22
 318 001e 7C01      		movw r14,r24
  72:../../common/util.c ****     uint8_t n = 0;
 319               		.loc 1 72 0
 320 0020 80E0      		ldi r24,0
 321 0022 00C0      		rjmp .L41
 322               	.L46:
 323               		.loc 1 73 0
 324 0024 80E1      		ldi r24,lo8(16)
 325               	.L41:
 326               	.LVL36:
  74:../../common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 327               		.loc 1 74 0
 328 0026 3327      		clr r19
 329 0028 2F2D      		mov r18,r15
 330 002a 1E2D      		mov r17,r14
 331 002c 0D2D      		mov r16,r13
 332 002e 0115      		cp r16,__zero_reg__
 333 0030 1105      		cpc r17,__zero_reg__
 334 0032 2105      		cpc r18,__zero_reg__
 335 0034 3105      		cpc r19,__zero_reg__
 336 0036 01F0      		breq .L42
 337               	.LVL37:
 338               		.loc 1 74 0 is_stmt 0 discriminator 1
 339 0038 885F      		subi r24,lo8(-(8))
 340               	.LVL38:
 341 003a 6801      		movw r12,r16
 342 003c 7901      		movw r14,r18
 343               	.LVL39:
 344               	.L42:
  75:../../common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 345               		.loc 1 75 0 is_stmt 1
 346 003e 9701      		movw r18,r14
 347 0040 8601      		movw r16,r12
 348 0042 A4E0      		ldi r26,4
 349               		1:
 350 0044 3695      		lsr r19
 351 0046 2795      		ror r18
 352 0048 1795      		ror r17
 353 004a 0795      		ror r16
 354 004c AA95      		dec r26
 355 004e 01F4      		brne 1b
 356 0050 0115      		cp r16,__zero_reg__
 357 0052 1105      		cpc r17,__zero_reg__
 358 0054 2105      		cpc r18,__zero_reg__
 359 0056 3105      		cpc r19,__zero_reg__
 360 0058 01F0      		breq .L43
 361               	.LVL40:
 362               		.loc 1 75 0 is_stmt 0 discriminator 1
 363 005a 8C5F      		subi r24,lo8(-(4))
 364               	.LVL41:
 365 005c 6801      		movw r12,r16
 366 005e 7901      		movw r14,r18
 367               	.LVL42:
 368               	.L43:
  76:../../common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 369               		.loc 1 76 0 is_stmt 1
 370 0060 9701      		movw r18,r14
 371 0062 8601      		movw r16,r12
 372 0064 F2E0      		ldi r31,2
 373               		1:
 374 0066 3695      		lsr r19
 375 0068 2795      		ror r18
 376 006a 1795      		ror r17
 377 006c 0795      		ror r16
 378 006e FA95      		dec r31
 379 0070 01F4      		brne 1b
 380 0072 0115      		cp r16,__zero_reg__
 381 0074 1105      		cpc r17,__zero_reg__
 382 0076 2105      		cpc r18,__zero_reg__
 383 0078 3105      		cpc r19,__zero_reg__
 384 007a 01F0      		breq .L44
 385               	.LVL43:
 386               		.loc 1 76 0 is_stmt 0 discriminator 1
 387 007c 8E5F      		subi r24,lo8(-(2))
 388               	.LVL44:
 389 007e 6801      		movw r12,r16
 390 0080 7901      		movw r14,r18
 391               	.LVL45:
 392               	.L44:
  77:../../common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 393               		.loc 1 77 0 is_stmt 1
 394 0082 B701      		movw r22,r14
 395 0084 A601      		movw r20,r12
 396 0086 7695      		lsr r23
 397 0088 6795      		ror r22
 398 008a 5795      		ror r21
 399 008c 4795      		ror r20
 400 008e 452B      		or r20,r21
 401 0090 462B      		or r20,r22
 402 0092 472B      		or r20,r23
 403 0094 01F0      		breq .L45
 404               	.LVL46:
 405               		.loc 1 77 0 is_stmt 0 discriminator 1
 406 0096 8F5F      		subi r24,lo8(-(1))
 407               	.LVL47:
 408               	.L45:
 409               	/* epilogue start */
  78:../../common/util.c ****     return n;
  79:../../common/util.c **** }
 410               		.loc 1 79 0 is_stmt 1
 411 0098 1F91      		pop r17
 412 009a 0F91      		pop r16
 413 009c FF90      		pop r15
 414 009e EF90      		pop r14
 415 00a0 DF90      		pop r13
 416 00a2 CF90      		pop r12
 417 00a4 0895      		ret
 418               		.cfi_endproc
 419               	.LFE5:
 421               		.section	.text.bitrev,"ax",@progbits
 422               	.global	bitrev
 424               	bitrev:
 425               	.LFB6:
  80:../../common/util.c **** 
  81:../../common/util.c **** 
  82:../../common/util.c **** 
  83:../../common/util.c **** uint8_t bitrev(uint8_t bits)
  84:../../common/util.c **** {
 426               		.loc 1 84 0
 427               		.cfi_startproc
 428               	.LVL48:
 429               	/* prologue: function */
 430               	/* frame size = 0 */
 431               	/* stack size = 0 */
 432               	.L__stack_usage = 0
  85:../../common/util.c ****     bits = (bits & 0x0f)<<4 | (bits & 0xf0)>>4;
 433               		.loc 1 85 0
 434 0000 8295      		swap r24
 435               	.LVL49:
  86:../../common/util.c ****     bits = (bits & 0b00110011)<<2 | (bits & 0b11001100)>>2;
 436               		.loc 1 86 0
 437 0002 982F      		mov r25,r24
 438 0004 9C7C      		andi r25,lo8(-52)
 439 0006 9695      		lsr r25
 440 0008 9695      		lsr r25
 441 000a 8373      		andi r24,lo8(51)
 442               	.LVL50:
 443 000c 44E0      		ldi r20,lo8(4)
 444 000e 849F      		mul r24,r20
 445 0010 9001      		movw r18,r0
 446 0012 1124      		clr __zero_reg__
 447 0014 922B      		or r25,r18
 448               	.LVL51:
  87:../../common/util.c ****     bits = (bits & 0b01010101)<<1 | (bits & 0b10101010)>>1;
 449               		.loc 1 87 0
 450 0016 892F      		mov r24,r25
 451 0018 8A7A      		andi r24,lo8(-86)
 452 001a 8695      		lsr r24
 453 001c 9575      		andi r25,lo8(85)
 454               	.LVL52:
 455 001e 990F      		lsl r25
 456               	.LVL53:
  88:../../common/util.c ****     return bits;
  89:../../common/util.c **** }
 457               		.loc 1 89 0
 458 0020 892B      		or r24,r25
 459               	.LVL54:
 460 0022 0895      		ret
 461               		.cfi_endproc
 462               	.LFE6:
 464               		.section	.text.bitrev16,"ax",@progbits
 465               	.global	bitrev16
 467               	bitrev16:
 468               	.LFB7:
  90:../../common/util.c **** 
  91:../../common/util.c **** uint16_t bitrev16(uint16_t bits)
  92:../../common/util.c **** {
 469               		.loc 1 92 0
 470               		.cfi_startproc
 471               	.LVL55:
 472 0000 1F93      		push r17
 473               	.LCFI8:
 474               		.cfi_def_cfa_offset 3
 475               		.cfi_offset 17, -2
 476 0002 CF93      		push r28
 477               	.LCFI9:
 478               		.cfi_def_cfa_offset 4
 479               		.cfi_offset 28, -3
 480 0004 DF93      		push r29
 481               	.LCFI10:
 482               		.cfi_def_cfa_offset 5
 483               		.cfi_offset 29, -4
 484 0006 1F92      		push __zero_reg__
 485               	.LCFI11:
 486               		.cfi_def_cfa_offset 6
 487 0008 CDB7      		in r28,__SP_L__
 488 000a DEB7      		in r29,__SP_H__
 489               	.LCFI12:
 490               		.cfi_def_cfa_register 28
 491               	/* prologue: function */
 492               	/* frame size = 1 */
 493               	/* stack size = 4 */
 494               	.L__stack_usage = 4
  93:../../common/util.c ****     bits = bitrev(bits & 0x00ff)<<8 | bitrev((bits & 0xff00)>>8);
 495               		.loc 1 93 0
 496 000c 9983      		std Y+1,r25
 497 000e 0E94 0000 		call bitrev
 498               	.LVL56:
 499 0012 182F      		mov r17,r24
 500 0014 9981      		ldd r25,Y+1
 501 0016 892F      		mov r24,r25
 502 0018 0E94 0000 		call bitrev
 503               	.LVL57:
 504 001c 212F      		mov r18,r17
 505 001e 30E0      		ldi r19,0
 506 0020 322F      		mov r19,r18
 507 0022 2227      		clr r18
  94:../../common/util.c ****     return bits;
  95:../../common/util.c **** }
 508               		.loc 1 95 0
 509 0024 A901      		movw r20,r18
 510 0026 482B      		or r20,r24
 511 0028 CA01      		movw r24,r20
 512               	.LVL58:
 513               	/* epilogue start */
 514 002a 0F90      		pop __tmp_reg__
 515 002c DF91      		pop r29
 516 002e CF91      		pop r28
 517 0030 1F91      		pop r17
 518 0032 0895      		ret
 519               		.cfi_endproc
 520               	.LFE7:
 522               		.section	.text.bitrev32,"ax",@progbits
 523               	.global	bitrev32
 525               	bitrev32:
 526               	.LFB8:
  96:../../common/util.c **** 
  97:../../common/util.c **** uint32_t bitrev32(uint32_t bits)
  98:../../common/util.c **** {
 527               		.loc 1 98 0
 528               		.cfi_startproc
 529               	.LVL59:
 530 0000 CF92      		push r12
 531               	.LCFI13:
 532               		.cfi_def_cfa_offset 3
 533               		.cfi_offset 12, -2
 534 0002 DF92      		push r13
 535               	.LCFI14:
 536               		.cfi_def_cfa_offset 4
 537               		.cfi_offset 13, -3
 538 0004 EF92      		push r14
 539               	.LCFI15:
 540               		.cfi_def_cfa_offset 5
 541               		.cfi_offset 14, -4
 542 0006 FF92      		push r15
 543               	.LCFI16:
 544               		.cfi_def_cfa_offset 6
 545               		.cfi_offset 15, -5
 546 0008 CF93      		push r28
 547               	.LCFI17:
 548               		.cfi_def_cfa_offset 7
 549               		.cfi_offset 28, -6
 550 000a DF93      		push r29
 551               	.LCFI18:
 552               		.cfi_def_cfa_offset 8
 553               		.cfi_offset 29, -7
 554               	/* prologue: function */
 555               	/* frame size = 0 */
 556               	/* stack size = 6 */
 557               	.L__stack_usage = 6
 558 000c 6B01      		movw r12,r22
 559 000e 7C01      		movw r14,r24
  99:../../common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff)<<16 | bitrev16((bits & 0xffff0000)>>16);
 560               		.loc 1 99 0
 561 0010 CB01      		movw r24,r22
 562 0012 0E94 0000 		call bitrev16
 563               	.LVL60:
 564 0016 EC01      		movw r28,r24
 565 0018 C701      		movw r24,r14
 566 001a 0E94 0000 		call bitrev16
 567               	.LVL61:
 568 001e 6C01      		movw r12,r24
 569               	.LVL62:
 570 0020 CE01      		movw r24,r28
 571 0022 A0E0      		ldi r26,0
 572 0024 B0E0      		ldi r27,0
 573 0026 7727      		clr r23
 574 0028 6627      		clr r22
 575 002a E12C      		mov r14,__zero_reg__
 576 002c F12C      		mov r15,__zero_reg__
 577 002e 6C29      		or r22,r12
 578 0030 7D29      		or r23,r13
 579 0032 8E29      		or r24,r14
 580 0034 9F29      		or r25,r15
 581               	/* epilogue start */
 100:../../common/util.c ****     return bits;
 101:../../common/util.c **** }
 582               		.loc 1 101 0
 583 0036 DF91      		pop r29
 584 0038 CF91      		pop r28
 585               	.LVL63:
 586 003a FF90      		pop r15
 587 003c EF90      		pop r14
 588 003e DF90      		pop r13
 589 0040 CF90      		pop r12
 590               	.LVL64:
 591 0042 0895      		ret
 592               		.cfi_endproc
 593               	.LFE8:
 595               		.text
 596               	.Letext0:
 597               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 util.c
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:2      *ABS*:0000003e __SP_H__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:3      *ABS*:0000003d __SP_L__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:4      *ABS*:0000003f __SREG__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:6      *ABS*:00000001 __zero_reg__
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:13     .text.bitpop:00000000 bitpop
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:50     .text.bitpop16:00000000 bitpop16
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:88     .text.bitpop32:00000000 bitpop32
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:145    .text.biton:00000000 biton
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:197    .text.biton16:00000000 biton16
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:274    .text.biton32:00000000 biton32
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:424    .text.bitrev:00000000 bitrev
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:467    .text.bitrev16:00000000 bitrev16
/var/folders/1n/7_pxd1gd79b8r2krz1090vjm0000gn/T//ccMEitLx.s:525    .text.bitrev32:00000000 bitrev32

NO UNDEFINED SYMBOLS
